# {{{projectName}}}

This is the `dtsgenerator` plugin.
This plugin's description is here.

# Install

```
npm install {{{projectName}}}
```

# Usage

`dtsgen.json`
```json
{
    "plugins": {
        "{{{projectName}}}": true, // or { config object }
    }
}
```

# Configuration

<!-- If this plugin uses the config object this section is useful for plugin user. -->

- the type of configuration
```
type Config = {
    map: {
        from: (string | boolean)[];
        to: string[];
    }[];
};
```

| key | type | description |
|-----|------|-------------|
| map | Array of object | the mapping of replacing. |
| map.*n*.from | `Array<string | boolean>` | the definition of from name. if this value is true, it treated as wildcard . |
| map.*n*.to | `Array<string | boolean>` | the definition of to name. |


- Example
```
{
  "map": [
    {
      "from": ["Components", "Schemas"],
      "to": ["Test", "PetStore"]
    },
    {
      "from": ["Paths"],
      "to": ["Test", "PetStore"]
    }
  ]
}
```


# Development

```
npm run build
npm test
```

## Stacks

- TypeScript
- eslint
- prettier

## Files

- `index.ts`: plugin main file
- `test/snapshot_test.ts`: test main file. should not edit this file.
- `test/post_snapshots/`: post process test patterns. Please add folder if you need.
- `test/pre_snapshots/`: pre process test patterns. Please add folder if you need.
- `.github/workflows/`: Github Action's workflow files for CI and automatic release (need to set up the secrets).

## npm scripts

### main scripts

- `npm run build`: transpile this plugin. This command need before publishing this plugin.
- `npm test`: test this plugin with coverage.
- `npm run clean`: remove all compiled files.

### sub scripts

- `npm run fix`: fix lint error and format source files.
- `npm run compile`: do transpile by TypeScript only.
- `npm run test:update-snapshot`: update snapshot files for unit tests.
- `npm run coverage`: output coverage report file.

## Github Actions

- CI: The unit tests will be run automatically.
- Release: When you push a tag, it will automatically publish this plugin to npm.
    - However, you need to set the [npm](https://www.npmjs.com/)'s access token for publishing to npm as `NPM_TOKEN` in the project configuration in advance.
    - If you don't need it, delete the workflow file.
